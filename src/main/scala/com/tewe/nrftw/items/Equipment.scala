package com.tewe.nrftw.items

import com.tewe.nrftw.Enchant
import com.tewe.nrftw.EnchantmentData.*
import com.tewe.nrftw.EnchantGroup.*
import com.tewe.nrftw.ItemBuilderConfig
import com.tewe.nrftw.ItemRarity
import com.tewe.nrftw.ItemSlot.*
import com.tewe.nrftw.WeaponBuilderConfig
import com.tewe.nrftw.WeaponType.*

// format: off

val helmetMagicEnchants = List(
  // Enchant("o_hme1", Other, "Poise Defense increased by 1-3"),
  poiseDefenseIncreased,
  // Enchant("a_hme2", Attack, "Fire Damage increased by 4%-15%"),
  fireDamageIncreased,
  // Enchant("a_hme3", Attack, "Ice Damage increased by 4%-15%"),
  coldDamageIncreased,
  // Enchant("a_hme4", Attack, "Lightning Damage increased by 4%-15%"),
  lightningDamageIncreased,
  // Enchant("a_hme5", Attack, "Plague Damage increased by 4%-15%"),
  plagueDamageIncreased,
  // Enchant("f_hme6", Focus, "Focus Gain increased by 4%-15%"),
  focusGainIncreased,
  // Enchant("f_hme7", Focus, "Focus Cost decreased by 7%-25% at Full Focus"),
  focusCostDecreasedAtFullFocus,
  // Enchant("f_hme8", Focus, "Focus Cost decreased by 6%-25% at Low Health"),
  focusCostDecreasedAtLowHealth,
  // Enchant("f_hme9", Focus, "Gain 3-10 Focus on inflicting Any Status"),
  gainFocusOnBuildup,
  // Enchant("f_hme10", Focus, "Max Focus increased by 7%-25%"),
  maxFocusIncreased,
  // Enchant("f_hme11", Focus, "Focus Cost decreased by 6%-20% for 10s after Rune Attack"),
  focusCostDecreasedAfterRuneAttack,
  // Enchant("f_hme12", Focus, "Regenerate Focus in Combat"),
  regenFocusInCombat,
  // Enchant("s_hme13", Stamina, "Stamina Recovery increased by 6%-20% based on Durability"),
  staminaRegenerationScalesWithDurability,
  // Enchant("u_hme14", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("u_hme15", Durability, "Durability Loss ignored with 6%-20% chance"),
  chanceToIngoreDurabilityLoss,
  // Enchant("r_hme16", Resistance, "Cold Resistance increased by 10%-20%"),
  coldResistanceIncreased,
  // Enchant("r_hme17", Resistance, "Heat Resistance increased by 10%-20%"),
  fireResistanceIncreased,
  // Enchant("r_hme18", Resistance, "Lightning Resistance increased by 10%-20%"),
  lightningResistanceIncreased,
  // Enchant("r_hme19", Resistance, "Plague Resistance increased by 10%-20%"),
  plagueResistanceIncreased,
  // Enchant("r_hme20", Resistance, "Stagger Resistance increased by 7%-15%"),
  staggerResistanceIncreased,
  // Enchant("h_hme21", Healing, "Regainable health increased by 10%-20%"),
  healthRallyIncreased,
  // Enchant("h_hme22", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("w_hme23", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
  // Enchant("d_hme24", Defense, "Damage Taken decreased up to 2%-6% based on Durability"),
  damageTakenScalesWithDurability,
  // Enchant("d_hme25", Defense, "Armor increased by 10%-20%"),
  armorIncreased,
)

val helmetEnchants = List(
  // Enchant("o_bnc", Other, "Bomb not consumed with 10%-20% chance"),
  chanceToNotConsumeBomb,
  // Enchant("a_hdi", Attack, "Fire Damage increased by 7%-25%"),
  fireDamageIncreasedPlagued,
  // Enchant("a_cdi", Attack, "Ice Damage increased by 7%-25%"),
  coldDamageIncreasedPlagued,
  // Enchant("a_ldi", Attack, "Lightning Damage increased by 7%-25%"),
  lightningDamageIncreasedPlagued,
  // Enchant("a_pdi", Attack, "Plague Damage increased by 7%-25%"),
  plagueDamageIncreasedPlagued,
  // Enchant("f_gb", Focus, "Gain 8-15 Focus on inflicting any Status"),
  gainFocusOnBuildupPlagued,
  // Enchant("f_fcslh", Focus, "Focus Cost decreased by 15%-30% at Low Health"),
  focusCostDecreasedAtLowHealthPlagued,
  // Enchant("s_sri", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("h_hilf", Healing, "Healing increased by 9%-30% at Low Focus"),
  healingIncreasedAtLowFocus,
  // Enchant("h_hfs", Healing, "Gain Health equal to ?%-10% of Focus Spent"),
  gainHealthForFocusSpent,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
  // Enchant("d_dtdlf", Defense, "Damage Taken decreased by 7%-15% at Low Focus"),
  damageTakedDecreasedAtLowFocus,
  // Enchant("d_dtdd", Defense, "Damage Taken decreased by up to 5%-10% based on Durability"),
  damageTakenScalesWithDurabilityPlagued,
)

val helmetEnchantDownsides = List(
  // Enchant("down_ad", Downside, "Armor Decreased by 20-30%"),
  armorDecreased,
  // Enchant("down_dtiadt", Downside, "Damage Taken Increased by 21-30% for 6 seconds After Damage Taken"),
  damageTakenIncreasedAfterDamageTaken,
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_dtiff", Downside, "Damage Taken Increased by 26%-40% If Not at Full Focus"),
  damageTakenIncreasedIfNotFullFocus,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_mfd", Downside, "Max focus decreased by 18-25%"),
  maxFocusDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_fgd", Downside, "Focus gain decreased by 32%-50%"),
  focusGainDecreased,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_mhd", Downside, "Max Health decreased by 14%-20%"),
  maxHealthDecreased,
  // Enchant("down_msd", Downside, "Max Stamina decreased by 14%-20%"),
  maxStaminaDecreased,
  // Enchant("down_sci", Downside, "Stamina Cost increased by 13%-20%"),
  staminaCostIncreased,
  // Enchant("down_srd", Downside, "Stagger Resistance decreased by 26%-40%"),
  staggerResistanceDecreased,
)

val helmetPlagued = ItemBuilderConfig(
  itemSlot = HelmetSlot,
  itemRarity = ItemRarity.Plagued,
  gems = gems,
  magicEnchants = helmetMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchants = helmetEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchantDownsides = helmetEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
)

val armorMagicEnchants = List(
  // Enchant("o_ame1", Other, "Poise Defense increased by 1-3"),
  poiseDefenseIncreased,
  // Enchant("f_ame2", Focus, "Gain 3-10 Focus on Staggering an Enemy"),
  gainFocusOnStagger,
  // Enchant("f_ame3", Focus, "Focus Gain increased by 4%-15% based on Durability"),
  focusGainScalesWithDurability,
  // Enchant("u_ame4", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("u_ame5", Durability, "Chance to ignore Durability Loss increased by 6%-20%"),
  chanceToIngoreDurabilityLoss,
  // Enchant("r_ame6", Resistance, "Cold Resistance increased by 10%-20%"),
  coldResistanceIncreased,
  // Enchant("r_ame7", Resistance, "Heat Resistance increased by 10%-20%"),
  fireResistanceIncreased,
  // Enchant("r_ame8", Resistance, "Lightning Resistance increased by 10%-20%"),
  lightningResistanceIncreased,
  // Enchant("r_ame9", Resistance, "Plague Resistance increased by 10%-20%"),
  plagueResistanceIncreased,
  // Enchant("r_ame10", Resistance, "Stagger Resistance increased by 7%-15%"),
  staggerResistanceIncreased,
  // Enchant("h_ame11", Healing, "Max Health increased by 4%-15%"),
  maxHealthIncreased,
  // Enchant("h_ame12", Healing, "Regainable health increased by 10%-20%"),
  healthRallyIncreased,
  // TODO replaced by max health: Enchant("h_ame13", Healing, "Health increased by 4%-15%"),
  // Enchant("h_ame14", Healing, "Healing increased by 6%-20%"),
  healingIncreased,
  // Enchant("w_ame15", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
  // Enchant("d_ame16", Defense, "Damage Taken decreased by 6%-20% at Low Health"),
  damageTakenDecreasedAtLowHealth,
  // Enchant("d_ame17", Defense, "Damage taken decreased by 2%-5% for each Nearby Enemy"),
  damageTakenDecreasedPerNearbyEnemy,
  // Enchant("d_ame18", Defense, "Damage Taken reduced by 6%-20% at Max Stamina"),
  damageTakenDecreasedAtFullStamina,
  // TODO duplicate Enchant("d_ame19", Defense, "Damage Taken reduced by 2-5% per nearby enemy (up to 5% max)"),
  // Enchant("d_ame20", Defense, "Damage Taken decreased up to 2%-6% based on Durability"),
  damageTakenScalesWithDurability,
  // Enchant("d_ame21", Defense, "Armor increased by 10%-20%"),
  armorIncreased,
)

val armorEnchants = List(
  // Enchant("o_pdic", Other, "Poise Defense increased by 5-10 while Charging"),
  poiseDefenseIncreasedWhileCharging,
  // Enchant("a_fea", Attack, "Frozen Enemy Armor decreased by 15%-30%"),
  enemyArmorDecreasedAfterFrost,
  // Enchant("a_ddt", Attack, "Deal 4%-15% Damage on Damage Taken"),
  dealDamageOnDamageTaken,
  // Enchant("a_dis", Attack, "Damage increased by 15%-30% for 6 seconds after Stagger"),
  damageIncreasedAfterStagger,
  // Enchant("a_bdi", Attack, "Burn Damage increased by 25%-50%"),
  burnDamageIncreased,
  // Enchant("a_iesrd", Attack, "Infected Enemy Stagger Resistance decreased by 15%-30%"),
  enemyStaggerResistanceDecreasedAfterInfection,
  // Enchant("f_gi", Focus, "Focus Gain increased by up to 10%-20% based on Durability"),
  focusGainScalesWithDurabilityPlagued,
  // Enchant("f_cd", Focus, "Focus Cost decreased by 15%-30% for 10s after Staggering an Enemy"),
  focusCostDecreasedAfterStagger,
  // Enchant("s_sri", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_mhi", Healing, "Max Health increased by 5%-10% of Max Focus"),
  maxHealthScalesWithMaxFocus,
  // Enchant("h_rh", Healing, "Regenerate Health in Combat Periodically"),
  regenHealthInCombat,
  // Enchant("h_hl", Healing, "Hunger Limit increased by 1"),
  hungerIncreased,
  // Enchant("m_os", Movement, "Overall Speed increased by 7%-15% for 10 seconds after Shock Status"),
  speedIncreasedAfterShock,
  // Enchant("w_iw", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
  // Enchant("d_dtdbas", Defense, "Damage Taken decreased by 25%-50% for 10 seconds after being afflicted by Status"),
  damageTakenDecreasedAfterBuildupTaken,
  // Enchant("d_dtdlh", Defense, "Damage Taken decreased by 12%-25% at Low Health"),
  damageTakenDecreasedAtLowHealthPlagued,
  // Enchant("d_dtdff", Defense, "Damage Taken decreased by 12%-25% at Full Focus"),
  damageTakenDecreasedAtFullFocus,
  // Enchant("d_dtdc", Defense, "Damage Taken decreased by 10%-20% while Charging"),
  damageTakenDecreasedWhileCharging,
  // Enchant("d_dtdd", Defense, "Damage Taken decreased by up to 5%-10% based on Durability"),
  damageTakenScalesWithDurabilityPlagued,
)

val armorEnchantDownsides = List(
  // Enchant("down_ad", Downside, "Armor Decreased by 20-30%"),
  armorDecreased,
  // TODO duplicate Enchant("down_meld", Downside, "Max Equip Load Decreased"),
  // Enchant("down_dtiadt", Downside, "Damage Taken Increased by 21-30% for 6 seconds After Damage Taken"),
  damageTakenIncreasedAfterDamageTaken,
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_dtiff", Downside, "Damage Taken Increased by 26%-40% If Not at Full Focus"),
  damageTakenIncreasedIfNotFullFocus,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_mfd", Downside, "Max focus decreased by 18-25%"),
  maxFocusDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_hd", Downside, "Healing decreased by 20%-30%"),
  healingDecreased,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_mhd", Downside, "Max Health decreased by 14%-20%"),
  maxHealthDecreased,
  // Enchant("down_msd", Downside, "Max Stamina decreased by 14%-20%"),
  maxStaminaDecreased,
  // Enchant("down_sci", Downside, "Stamina Cost increased by 13%-20%"),
  staminaCostIncreased,
  // Enchant("down_srd", Downside, "Stagger Resistance decreased by 26%-40%"),
  staggerResistanceDecreased,
)

val armorPlagued = ItemBuilderConfig(
  itemSlot = ArmorSlot,
  itemRarity = ItemRarity.Plagued,
  gems = gems,
  magicEnchants = armorMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchants = armorEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchantDownsides = armorEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
)

val pantsMagicEnchants = List(
  // Enchant("o_pme1", Other, "Poise Defense increased by 1-3"),
  poiseDefenseIncreased,
  // Enchant("a_pme2", Attack, "Damage increased by 4%-15% for 5 seconds after Damage Dodged"),
  damageIncreasedAfterDodged,
  // Enchant("a_pme3", Attack, "Deal 4-15% Damage on Damage Dodged"),
  dealDamageOnDodged,
  // Enchant("f_pme4", Focus, "Gain 5-15 Focus on Damage Dodged"),
  gainFocusOnDodged,
  // Enchant("f_pme5", Focus, "Focus Gain increased by 4%-15% based on Durability"),
  focusGainScalesWithDurability,
  // Enchant("s_pme6", Stamina, "Stamina Cost decreased by 7%-25% at Full Health"),
  staminaCostDecreasedAtFullHealth,
  // Enchant("s_pme7", Stamina, "Stamina Cost decreased by 7%-25% at Low Health"),
  staminaCostDecreasedAtLowHealth,
  // Enchant("s_pme8", Stamina, "Stamina Recovery increased by 6%-20%"),
  staminaRegenerationIncreased,
  // Enchant("s_pme9", Stamina, "Stamina Cost decreased by 8%-25% at High Focus"),
  staminaCostDecreasedAtHighFocus,
  // Enchant("s_pme10", Stamina, "Gain 5-15 Stamina on Damage Dodged"),
  gainStaminaOnDodged,
  // Enchant("s_pme11", Stamina, "Dodge Stamina Cost decreased by 7%-25%"),
  dodgeStaminaCostDecreased,
  // Enchant("u_pme12", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("u_pme13", Durability, "Chance to ignore Durability Loss increased by 6%-20%"),
  chanceToIngoreDurabilityLoss,
  // Enchant("r_pme14", Resistance, "Cold Resistance increased by 10%-20%"),
  coldResistanceIncreased,
  // Enchant("r_pme15", Resistance, "Heat Resistance increased by 10%-20%"),
  fireResistanceIncreased,
  // Enchant("r_pme16", Resistance, "Lightning Resistance increased by 10%-20%"),
  lightningResistanceIncreased,
  // Enchant("r_pme17", Resistance, "Plague Resistance increased by 10%-20%"),
  plagueResistanceIncreased,
  // Enchant("r_pme18", Resistance, "Stagger Resistance increased by 7%-15%"),
  staggerResistanceIncreased,
  // Enchant("h_pme19", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("h_pme20", Healing, "Regainable health increased by 10%-20%"),
  healthRallyIncreased,
  // Enchant("m_pme21", Movement, "Movement Speed increased by 4%-15% for 10 seconds after Kill"),
  movementSpeedIncreasedAfterKill,
  // Enchant("m_pme22", Movement, "Movement Speed increased by 3%-10%"),
  movementSpeedIncreased,
  // Enchant("w_pme23", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
  // Enchant("d_pme24", Defense, "Damage Taken decreased up to 2%-6% based on Durability"),
  damageTakenScalesWithDurability,
  // Enchant("d_pme25", Defense, "Armor increased by 10%-20%"),
  armorIncreased,
)

val pantsEnchants = List(
  // Enchant("o_pdic", Other, "Poise Defense increased by 5-10 while Charging"),
  poiseDefenseIncreasedWhileCharging,
  // Enchant("a_dddd", Attack, "Deal 4%-15% Damage on Damage Dodged"),
  dealDamageOnDodged,
  // Enchant("a_dis", Attack, "Damage increased by 5%-10% after Sprinting for 2 seconds"),
  damageIncreasedAfterSprint,
  // Enchant("a_didd", Attack, "Damage increased by 15%-30% for 6 seconds after Damage Dodged"),
  damageIncreasedAfterDodgedPlagued,
  // Enchant("f_fgid", Focus, "Focus Gain increased by up to 10%-20% based on Durability"),
  focusGainScalesWithDurabilityPlagued,
  // Enchant("s_scdlh", Stamina, "Stamina Cost decreased by 15%-30% at Low Health"),
  staminaCostDecreasedAtLowHealthPlagued,
  // Enchant("s_dscdlh", Stamina, "Dodge Stamina Cost decreased by 18%-35% at Low Health"),
  dodgeStaminaCostDecreasedAtLowHealth,
  // Enchant("s_scdlf", Stamina, "Stamina Cost decreased by 10%-20% at Low Focus"),
  staminaCostDecreasedAtLowFocus,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("h_ghdd", Healing, "Gain 3%-5% Health on Damage Dodged"),
  gainHealthOnDodged,
  // Enchant("h_msimf", Healing, "Max Stamina increased by 3%-5% of Max Focus"),
  maxStaminaScalesWithMaxFocus,
  // Enchant("m_msica", Movement, "Movement Speed increased by 7%-15% for 6s after Charged Attack"),
  movementSpeedIncreasedAfterChargedAttack,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
  // Enchant("d_dtdd", Defense, "Damage Taken decreased by up to 5%-10% based on Durability"),
  damageTakenScalesWithDurabilityPlagued,
)

val pantsEnchantDownsides = List(
  // Enchant("down_ad", Downside, "Armor Decreased by 20-30%"),
  armorDecreased,
  // Enchant("down_dtiadt", Downside, "Damage Taken Increased by 21-30% for 6 seconds After Damage Taken"),
  damageTakenIncreasedAfterDamageTaken,
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_dtiff", Downside, "Damage Taken Increased by 26%-40% If Not at Full Focus"),
  damageTakenIncreasedIfNotFullFocus,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_mfd", Downside, "Max focus decreased by 18-25%"),
  maxFocusDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_mhd", Downside, "Max Health decreased by 14%-20%"),
  maxHealthDecreased,
  // Enchant("down_msd", Downside, "Max Stamina decreased by 14%-20%"),
  maxStaminaDecreased,
  // Enchant("down_sci", Downside, "Stamina Cost increased by 13%-20%"),
  staminaCostIncreased,
  // Enchant("down_dsci", Downside, "Dodge Stamina Cost increased by 26%-40%"),
  dodgeStaminaCostIncreased,
  // Enchant("down_msd", Downside, "Movement Speed decreased by 7%–25%"),
  movementSpeedDecreased,
  // Enchant("down_hr", Downside, "Heavy Roll only"),
  onlyHeavyRoll,
  // Enchant("down_srd", Downside, "Stagger Resistance decreased by 26%-40%"),
  staggerResistanceDecreased,
)

val pantsPlagued = ItemBuilderConfig(
  itemSlot = PantsSlot,
  itemRarity = ItemRarity.Plagued,
  gems = gems,
  magicEnchants = pantsMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchants = pantsEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchantDownsides = pantsEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
)

val glovesMagicEnchants = List(
  // Enchant("o_gme1", Other, "Poise Defense increased by 1-3"),
  poiseDefenseIncreased,
  // Enchant("a_gme2", Attack, "Physical Damage increased by 4%-15%"),
  physicalDamageIncreased,
  // Enchant("a_gme3", Attack, "Burn Buildup increased by 6%-20%"),
  burnBuildupIncreased,
  // Enchant("a_gme4", Attack, "Shock Buildup increased by 6%-20%"),
  shockBuildupIncreased,
  // Enchant("a_gme5", Attack, "Freeze Buildup increased by 6%-20%"),
  frostBuildupIncreased,
  // Enchant("a_gme6", Attack, "Infect Buildup increased by 6%-20%"),
  infectionBuildupIncreased,
  // Enchant("a_gme7", Attack, "On Parry, deal 7%-25% of Weapon Damage"),
  dealDamageOnParry,
  // Enchant("a_gme8", Attack, "Damage increased by 4%-15% for 5 seconds after Parry"),
  damageIncreasedAfterParry,
  // Enchant("a_gme9", Attack, "Damage increased by 3%-10% based on Durability"),
  damageScalesWithDurability,
  // Enchant("f_gme10", Focus, "Focus Gain increased by 4%-15% based on Durability"),
  focusGainScalesWithDurability,
  // Enchant("f_gme11", Focus, "Gain 5-15 Focus on Parry"),
  gainFocusOnParry,
  // Enchant("s_gme12", Stamina, "Stamina Recovery increased by 6%-20% based on Durability"),
  staminaRegenerationScalesWithDurability,
  // Enchant("s_gme13", Stamina, "Gain 9-30 Stamina on Parry"),
  gainStaminaOnParry,
  // Enchant("u_gme14", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("u_gme15", Durability, "Chance to ignore Durability Loss increased by 6%-20%"),
  chanceToIngoreDurabilityLoss,
  // Enchant("r_gme16", Resistance, "Heat Resistance increased by 10%-20%"),
  fireResistanceIncreased,
  // Enchant("r_gme17", Resistance, "Cold Resistance increased by 10%-20%"),
  coldResistanceIncreased,
  // Enchant("r_gme18", Resistance, "Lightning Resistance increased by 10%-20%"),
  lightningResistanceIncreased,
  // Enchant("r_gme19", Resistance, "Plague Resistance increased by 10%-20%"),
  plagueResistanceIncreased,
  // Enchant("r_gme20", Resistance, "Stagger Resistance increased by 7%-15%"),
  staggerResistanceIncreased,
  // Enchant("h_gme21", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("h_gme22", Healing, "Regainable health increased by 10%-20%"),
  healthRallyIncreased,
  // Enchant("h_gme23", Healing, "Gain 3%-10% Health on Kill"),
  gainHealthOnKill,
  // Enchant("w_gme24", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
  // Enchant("d_gme25", Defense, "Damage Taken decreased up to 2%-6% based on Durability"),
  damageTakenScalesWithDurability,
  // Enchant("d_gme26", Defense, "Armor increased by 10%-20%"),
  armorIncreased,
)

val glovesEnchants = List(
  // Enchant("o_bdi", Other, "Bomb Damage increased by 15%-30%"),
  bombDamageIncreased,
  // Enchant("a_ddp", Attack, "Deal 15%-30% Damage on Parry"),
  dealDamageOnParryPlagued,
  // Enchant("a_dip", Attack, "Damage increased by 15%-30% for 6 seconds after Parry"),
  damageIncreasedAfterParryPlagued,
  // Enchant("a_bbi", Attack, "Burn Buildup increased by 15%-30%"),
  burnBuildupIncreasedPlagued,
  // Enchant("a_sbi", Attack, "Shock Buildup increased by 15%-30%"),
  shockBuildupIncreasedPlagued,
  // Enchant("a_fbi", Attack, "Frost Buildup increased by 15%-30%"),
  frostBuildupIncreasedPlagued,
  // Enchant("a_ibi", Attack, "Infection Buildup increased by 15%-30%"),
  infectionBuildupIncreasedPlagued,
  // Enchant("a_pdi", Attack, "Physical Damage increased by 7%-25%"),
  physicalDamageIncreasedPlagued,
  // Enchant("a_elhe", Attack, "Execute Infected Low Health Enemies on Damage Dealt"),
  executeAgainstInfectedLowHealth,
  // Enchant("f_fgid", Focus, "Focus Gain increased by up to 10%-20% based on Durability"),
  focusGainScalesWithDurabilityPlagued,
  // Enchant("s_srid", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // TODO old? Enchant("s_irss", Stamina, "Instantly restore 25–40 Stamina on Stagger"),
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_ghp", Healing, "Gain 2%-6% Health on Parry"),
  gainHealthOnParry,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("h_ghk", Healing, "Gain 5%-10% Health on Kill"),
  gainHealthOnKillPlagued,
  // Enchant("h_ghse", Healing, "Gain 5%-10% Health on Staggering an Enemy"),
  gainHealthOnStagger,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
  // Enchant("d_dtdd", Defense, "Damage Taken decreased by up to 5%-10% based on Durability"),
  damageTakenScalesWithDurabilityPlagued,
)

val glovesEnchantDownsides = List(
  // Enchant("down_ad", Downside, "Armor Decreased by 20-30%"),
  armorDecreased,
  // Enchant("down_pd", Downside, "Parry disabled"),
  parryDisabled,
  // Enchant("down_dtiadt", Downside, "Damage Taken Increased by 21-30% for 6 seconds After Damage Taken"),
  damageTakenIncreasedAfterDamageTaken,
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_dtiff", Downside, "Damage Taken Increased by 26%-40% If Not at Full Focus"),
  damageTakenIncreasedIfNotFullFocus,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_mfd", Downside, "Max focus decreased by 18-25%"),
  maxFocusDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_mhd", Downside, "Max Health decreased by 14%-20%"),
  maxHealthDecreased,
  // Enchant("down_msd", Downside, "Max Stamina decreased by 14%-20%"),
  maxStaminaDecreased,
  // Enchant("down_sci", Downside, "Stamina Cost increased by 13%-20%"),
  staminaCostIncreased,
  // Enchant("down_asci", Downside, "Attack Stamina Cost increased by 20%-30%"),
  attackStaminaCostIncreased,
  // Enchant("down_srd", Downside, "Stagger Resistance decreased by 26%-40%"),
  staggerResistanceDecreased,
)

val glovesPlagued = ItemBuilderConfig(
  itemSlot = GlovesSlot,
  itemRarity = ItemRarity.Plagued,
  gems = gems,
  magicEnchants = glovesMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchants = glovesEnchants.map(enchant => (enchant.id, enchant)).toMap,
  enchantDownsides = glovesEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
)

val weaponMagicEnchants = List(
  // Enchant("o_wme0", Other, "Damage increased by 15%-30% for 30s after Backstab"),
  damageIncreasedAfterBackstab,
  // Enchant("o_wme1", Other, "Stagger Damage increased by 15%-30% for 30s after Backstab"),
  staggerDamageIncreasedAfterBackstab,
  // Enchant("o_wme2", Other, "Stagger Damage increased by 15%-30% for 20s after Kill"),
  staggerDamageIncreasedAfterKill,
  // Enchant("a_wme3", Attack, "Damage increased by up to 3%-10% based on Durability"),
  damageScalesWithDurability,
  // Enchant("a_wme4", Attack, "Deal 25%-50% Explosion Damage on Kill"),
  spawnExplosionOnKill,
  // Enchant("a_wme5", Attack, "Deal 7%-25% Damage on Staggering an Enemy"),
  dealDamageOnStagger,
  // Enchant("a_wme6", Attack, "Attack Stamina Cost decreased by 7%-15%"),
  attackStaminaCostDecreased,
  // Enchant("a_wme7", Attack, "Attack Speed increased by 3%-10% based on Durability"),
  attackSpeedScalesWithDurability,
  // Enchant("a_wme8", Attack, "Damage increased by 6%-20% when at High Focus"),
  damageIncreasedAtHighFocus,
  // TODO old? Enchant("a_wme9", Attack, "Attack Stamina Cost decreased by 7%-25% at Low Health"),
  // Enchant("a_wme10", Attack, "Damage increased by 2%-5% for each Nearby Enemy"),
  damageIncreasedPerNearbyEnemy,
  // Enchant("a_wme11", Attack, "Stagger Damage increased by 4%-15%"),
  staggerDamageIncreased,
  // Enchant("a_wme12", Attack, "Stagger Damage increased by 6%-20% for 4s after Charged Attack"),
  staggerDamageIncreasedAfterChargedAttack,
  // Enchant("a_wme13", Attack, "Deal 15-50% Explosion Damage on Rune Attack with 10% chance"),
  chanceToSpawnExplosionOnRuneAttack,
  // Enchant("a_wme14", Attack, "Damage increased by 3%-10%"),
  damageIncreased,
  // Enchant("a_wme15", Attack, "Rune Damage increased by 4%-15%"),
  runeDamageIncreased,
  // Enchant("n_wme16", Infusion, "Fire Damage Infusion"),
  fireDamageOverride,
  // Enchant("n_wme17", Infusion, "Ice Damage Infusion"),
  coldDamageOverride,
  // Enchant("n_wme18", Infusion, "Lightning Damage Infusion"),
  lightningDamageOverride,
  // Enchant("n_wme19", Infusion, "Plague Damage Infusion"),
  plagueDamageOverride,
  // Enchant("a_wme20", Attack, "Attack damage increased by 6%-20% for 5s after Rune Attack"),
  attackDamageIncreasedAfterRuneAttack,
  // Enchant("a_wme21", Attack, "Normal attack damage increased by 4%-15% for 4s after Charged Attack"),
  normalDamageIncreasedAfterChargedAttack,
  // Enchant("s_wme22", Stamina, "Stamina Recovery increased by 6%-20% based on Durability"),
  staminaRegenerationScalesWithDurability,
  // TODO old? Enchant("s_wme23", Stamina, "Attack Stamina Cost decreased by 7%-25% after Backstab"),
  // Enchant("u_wme24", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("h_wme25", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("w_wme26", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
)

val weaponEnchants = List(
  // Enchant("o_gfob", Other, "Gain 5-10 Focus on backstab"),
  gainFocusOnBackstab,
  // Enchant("o_ghob", Other, "Gain 3%-5% Health on Backstab"),
  gainHealthOnBackstab,
  // Enchant("n_hi", Infusion, "Fire Damage Infusion"),
  fireDamageOverride,
  // Enchant("n_ci", Infusion, "Ice Damage Infusion"),
  coldDamageOverride,
  // Enchant("n_li", Infusion, "Lightning Damage Infusion"),
  lightningDamageOverride,
  // Enchant("n_pi", Infusion, "Plague Damage Infusion"),
  plagueDamageOverride,
  // Enchant("a_asid", Attack, "Attack Speed increased by 7%-15% based on Durability"),
  attackSpeedScalesWithDurabilityPlagued,
  // Enchant("a_rdi", Attack, "Rune Damage increased by 10%-20%"),
  runeDamageIncreasedPlagued,
  // Enchant("a_diff", Attack, "Damage increased by 15%-30% at Full Focus"),
  damageIncreasedAtFullFocus,
  // Enchant("a_dilh", Attack, "Damage increased by 15%-30% while at Low Health"),
  damageIncreasedAtLowHealth,
  // Enchant("a_difh", Attack, "Damage increased by 15%-30% while at Full Health"),
  damageIncreasedAtFullHealth,
  // Enchant("a_dlei", Attack, "Damage vs Large Enemies increased by 15%-30%"),
  damageIncreasedAgainstLargeEnemies,
  // Enchant("a_dif", Attack, "Damage increased by 20%-40% for 20s after Fatality"),
  damageIncreasedAfterFatality,
  // Enchant("a_dib", Attack, "Damage increased by 15%-30% for 30s after Backstab"),
  damageIncreasedAfterBackstab,
  // Enchant("a_cadi", Attack, "Charged Attack Damage increased by 10%-20%"),
  chargedDamageIncreased,
  // Enchant("a_nadica", Attack, "Normal attack damage increased by 12%-25% for 5s after Charged Attack"),
  normalDamageIncreasedAfterChargedAttackPlagued,
  // Enchant("a_adira", Attack, "Attack damage increased by 15%-30% for 6s after Rune Attack"),
  attackDamageIncreasedAfterRuneAttack,
  // Enchant("a_ddse", Attack, "Deal 15%-30% Damage on Staggering an Enemy"),
  dealDamageOnStaggerPlagued,
  // Enchant("a_did", Attack, "Damage increased by up to 7%-15% based on Durability"),
  damageScalesWithDurabilityPlagued,
  // Enchant("a_sdilh", Attack, "Stagger Damage increased by 12%-25% at Low Health"),
  staggerDamageIncreasedAtLowHealth,
  // Enchant("a_sdiaf", Attack, "Stagger Damage increased by 20%-40% for 20s after Fatality"),
  staggerDamageIncreasedAfterFatality,
  // Enchant("f_gff", Focus, "Gain 12–25 Focus on Fatality"),
  gainFocusOnFatality,
  // Enchant("f_gfk", Focus, "Gain 8-15 Focus on Kill"),
  gainFocusOnKill,
  // Enchant("s_srid", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // Enchant("s_ascdp", Stamina, "Attack Stamina Cost decreased by 15%-30% for 6 seconds after parry"),
  attackStaminaCostDecreasedAfterParryPlagued,
  // Enchant("s_scdf", Stamina, "Stamina Cost decreased by 15%-30% for 20s after Fatality"),
  staminaCostDecreasedAfterFatality,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("h_ghk", Healing, "Gain 5%-10% Health on Kill"),
  gainHealthOnKillPlagued,
  // Enchant("h_ghse", Healing, "Gain 5%-10% Health on Staggering an Enemy"),
  gainHealthOnStagger,
  // Enchant("h_ghca", Healing, "Gain 2%-4% Health on Charged Attack"),
  gainHealthOnChargedAttack,
  // Enchant("h_ghf", Healing, "Gain 5%-10% Health on Fatality"),
  gainHealthOnFatality,
  // Enchant("h_ghdaf", Healing, "Gain 1%-2% Health on Damage Dealt against Frozen Enemies"),
  gainHealthOnDamageDealtAgainstFrozen,
  // Enchant("m_msira", Movement, "Movement Speed increased by 7%-15% for 5s after Rune Attack"),
  movementSpeedIncreasedAfterRuneAttack,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
)

val weaponEnchantDownsides = List(
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_asci", Downside, "Healing decreased by 9%-14% for each Nearby Enemy"),
  healingDecreasedPerNearbyEnemy,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_asci", Downside, "Attack Stamina Cost increased by 20%-30%"),
  attackStaminaCostIncreased,
)

val weaponPlagued = WeaponBuilderConfig(
  itemConfig = ItemBuilderConfig(
    itemSlot = WeaponSlot,
    itemRarity = ItemRarity.Plagued,
    gems = gems,
    magicEnchants = weaponMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchants = weaponEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchantDownsides = weaponEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
  ),
  weaponTypes = weaponTypesSelect,
)

val shieldMagicEnchants = List(
  // Enchant("a_sme0", Attack, "Damage increased by up to 3%-10% based on Durability"),
  damageScalesWithDurability,
  // Enchant("a_sme1", Attack, "Deal 7-25% Damage on Parry"),
  dealDamageOnParry,
  // Enchant("a_sme2", Attack, "Damage increased by 5%-10% for 5 seconds after Block"),
  damageIncreasedAfterBlock,
  // Enchant("a_sme3", Attack, "Damage increased by 4%-15% for 5 seconds after Parry"),
  damageIncreasedAfterParry,
  // Enchant("a_sme4", Attack, "Deal 5%-15% Damage on Block"),
  dealDamageOnBlock,
  // Enchant("f_sme5", Focus, "Focus Gain increased by 4%-15% based on Durability"),
  focusGainScalesWithDurability,
  // Enchant("f_sme6", Focus, "Gain 2-5 Focus on Block"),
  gainFocusOnBlock,
  // Enchant("f_sme7", Focus, "Gain 5-15 Focus on Parry"),
  gainFocusOnParry,
  // Enchant("s_sme8", Stamina, "Stamina Recovery increased by 6%-20% based on Durability"),
  staminaRegenerationScalesWithDurability,
  // TODO duplicate Enchant("s_sme9", Stamina, "Gain 2-5 Stamina on Blocked Attacks"),
  // Enchant("s_sme10", Stamina, "Gain 9-30 Stamina on Parry"),
  gainStaminaOnParry,
  // Enchant("s_sme11", Stamina, "Attack Stamina Cost decreased by 7%-25% for 5s after Parry"),
  attackStaminaCostDecreasedAfterParry,
  // Enchant("d_sme12", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("h_sme13", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("w_sme14", Weight, "Item Weight decreased by 3%-10%"),
  itemWeightDecreased,
)

val shieldEnchants = List(
  // Enchant("o_pdib", Other, "Poise Defense increased by 5-10 while Blocking"),
  poiseDefenseIncreasedWhileBlocking,
  // Enchant("a_did", Attack, "Damage increased by up to 7%-15% based on Durability"),
  damageScalesWithDurabilityPlagued,
  // Enchant("a_dib", Attack, "Damage increased by 10%-20% for 6 seconds after Block"),
  damageIncreasedAfterBlockPlagued,
  // Enchant("a_dip", Attack, "Damage increased by 15%-30% for 6 seconds after Parry"),
  damageIncreasedAfterParryPlagued,
  // Enchant("a_ddb", Attack, "Deal 10%-20% Damage on Block"),
  dealDamageOnBlockPlagued,
  // Enchant("a_ddp", Attack, "Deal 15%-30% Damage on Parry"),
  dealDamageOnParryPlagued,
  // Enchant("s_srid", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_ghp", Healing, "Gain 2%-6% Health on Parry"),
  gainHealthOnParry,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
  // Enchant("d_dtdb", Defense, "Damage Taken decreased by 7%-15% while Blocking"),
  damageTakenDecreasedWhileBlocking,
)

val shieldEnchantDownsides = List(
  // Enchant("down_bd", Downside, "Block disabled"),
  blockingDisabled,
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
)

val shieldPlagued = WeaponBuilderConfig(
  itemConfig = ItemBuilderConfig(
    itemSlot = ShieldSlot,
    itemRarity = ItemRarity.Plagued,
    gems = gems,
    magicEnchants = shieldMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchants = shieldEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchantDownsides = shieldEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
  ),
  weaponTypes = shields,
)

val bowMagicEnchants = List(
  // Enchant("a_bme1", Attack, "Damage increased by up to 3%-10% based on Durability"),
  damageScalesWithDurability,
  // Enchant("n_bme2", Infusion, "Fire Damage Infusion"),
  fireDamageOverride,
  // Enchant("n_bme3", Infusion, "Ice Damage Infusion"),
  coldDamageOverride,
  // Enchant("n_bme4", Infusion, "Lightning Damage Infusion"),
  lightningDamageOverride,
  // Enchant("n_bme5", Infusion, "Plague Damage Infusion"),
  plagueDamageOverride,
  // Enchant("a_bme6", Attack, "Damage increased by 4%-15% if no Enemies nearby"),
  damageIncreasedWhenNoNearbyEnemy,
  // Enchant("a_bme7", Attack, "Damage increased by 4%-15% for 5 seconds after Damage Dodged"),
  damageIncreasedAfterDodged,
  // Enchant("a_bme8", Attack, "Deal 4-15% Damage on Damage Dodged"),
  dealDamageOnDodged,
  // Enchant("f_bme9", Focus, "Focus Gain increased by 4%-15% based on Durability"),
  focusGainScalesWithDurability,
  // Enchant("f_bme10", Focus, "Gain 5-15 Focus on Damage Dodged"),
  gainFocusOnDodged,
  // Enchant("s_bme11", Stamina, "Stamina Recovery increased by 6%-20% based on Durability"),
  staminaRegenerationScalesWithDurability,
  // Enchant("s_bme12", Stamina, "Dodge Stamina Cost decreased by 7%-25%"),
  dodgeStaminaCostDecreased,
  // Enchant("s_bme13", Stamina, "Gain 5-15 Stamina on Damage Dodged"),
  gainStaminaOnDodged,
  // Enchant("d_bme14", Durability, "Durability increased by 30%-100%"),
  durabilityIncreased,
  // Enchant("h_bme15", Healing, "Healing increased by 4%-15% based on Durability"),
  healingScalesWithDurability,
  // Enchant("w_bme16", Weight, "Item Weight decreased by 3%-10%")
  itemWeightDecreased,
)

val bowEnchants = List(
  // Enchant("a_did", Attack, "Damage increased by up to 7%-15% based on Durability"),
  damageScalesWithDurabilityPlagued,
  // Enchant("a_dinen", Attack, "Damage increased by 10%-20% if no Enemies nearby"),
  damageIncreasedWhenNoNearbyEnemy,
  // Enchant("n_hi", Infusion, "Fire Damage Infusion"),
  fireDamageOverride,
  // Enchant("n_ci", Infusion, "Ice Damage Infusion"),
  coldDamageOverride,
  // Enchant("n_li", Infusion, "Lightning Infusiion"),
  lightningDamageOverride,
  // Enchant("n_pi", Infusion, "Plague Infusion"),
  plagueDamageOverride,
  // Enchant("a_dddd", Attack, "Deal 4%-15% Damage on Damage Dodged"),
  dealDamageOnDodged,
  // Enchant("a_didd", Attack, "Damage increased by 15%-30% for 6 seconds after Damage Dodged"),
  damageIncreasedAfterDodgedPlagued,
  // Enchant("s_srid", Stamina, "Stamina Recovery increased by up to 7%-25% based on Durability"),
  staminaRegenerationScalesWithDurabilityPlagued,
  // Enchant("i_i", Indestructible, "Indestructible"),
  indestructible,
  // Enchant("h_hid", Healing, "Healing increased by up to 6%-20% based on Durability"),
  healingScalesWithDurabilityPlagued,
  // Enchant("h_ghdd", Healing, "Gain 3%-5% Health on Damage Dodged"),
  gainHealthOnDodged,
  // Enchant("w_iwd", Weight, "Item Weight decreased by 7%-15%"),
  itemWeightDecreasedPlagued,
)

val bowEnchantDownsides = List(
  // Enchant("down_u", Downside, "Unrepairable"),
  repairDisabled,
  // Enchant("down_eld", Downside, "Equip Load Decreased by 20%-30%"),
  equipLoadDecreased,
  // Enchant("down_dfc", Downside, "Drain Focus in Combat"),
  drainFocusInCombat,
  // Enchant("down_fci", Downside, "Focus Cost increased by 26%-40%"),
  focusCostIncreased,
  // Enchant("down_lftd", Downside, "Lose 10-15 Focus each time you take Damage"),
  loseFocusOnDamageTaken,
  // Enchant("down_tdfu", Downside, "Take 20%-30% Damage on Focus Use"),
  takeDamageOnFocusUse,
  // Enchant("down_lhc", Downside, "Lose Health in Combat periodically"),
  drainHealthInCombat,
  // Enchant("down_dsci", Downside, "Dodge Stamina Cost increased by 26%-40%"),
  dodgeStaminaCostIncreased,
)

val bowPlagued = WeaponBuilderConfig(
  itemConfig = ItemBuilderConfig(
    itemSlot = BowSlot,
    itemRarity = ItemRarity.Plagued,
    gems = gems,
    magicEnchants = bowMagicEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchants = bowEnchants.map(enchant => (enchant.id, enchant)).toMap,
    enchantDownsides = bowEnchantDownsides.map(enchant => (enchant.id, enchant)).toMap,
  ),
  weaponTypes = bows,
)

val utilityPlagued = WeaponBuilderConfig(
  itemConfig = ItemBuilderConfig(
    itemSlot = UtilitySlot,
    itemRarity = ItemRarity.Plagued,
    gems = List.empty,
    magicEnchants = Map.empty,
    enchants = Map.empty,
    enchantDownsides = Map.empty,
  ),
  weaponTypes = utilities,
)

